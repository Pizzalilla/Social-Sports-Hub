// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Social_Sport_Hub.Data;

#nullable disable

namespace Social_Sport_Hub.Data.Migrations
{
    [DbContext(typeof(SportsHubContext))]
    [Migration("20251017162522_AddEventAndAttendanceTables")]
    partial class AddEventAndAttendanceTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Social_Sport_Hub.Models.AttendanceRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MarkedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SportEventId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SportEventId");

                    b.HasIndex("UserId");

                    b.ToTable("AttendanceRecords");
                });

            modelBuilder.Entity("Social_Sport_Hub.Models.HonorHistoryRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ChangeAmount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecordedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("HonorHistory");
                });

            modelBuilder.Entity("Social_Sport_Hub.Models.SportEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HostUserId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("SportType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SportEvents");
                });

            modelBuilder.Entity("Social_Sport_Hub.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HonorScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SportEventId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SportEventId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("UserType").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Social_Sport_Hub.Models.HostUser", b =>
                {
                    b.HasBaseType("Social_Sport_Hub.Models.User");

                    b.HasDiscriminator().HasValue("Host");
                });

            modelBuilder.Entity("Social_Sport_Hub.Models.PlayerUser", b =>
                {
                    b.HasBaseType("Social_Sport_Hub.Models.User");

                    b.HasDiscriminator().HasValue("Player");
                });

            modelBuilder.Entity("Social_Sport_Hub.Models.AttendanceRecord", b =>
                {
                    b.HasOne("Social_Sport_Hub.Models.SportEvent", "SportEvent")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("SportEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Social_Sport_Hub.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SportEvent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Social_Sport_Hub.Models.User", b =>
                {
                    b.HasOne("Social_Sport_Hub.Models.SportEvent", null)
                        .WithMany("Roster")
                        .HasForeignKey("SportEventId");
                });

            modelBuilder.Entity("Social_Sport_Hub.Models.SportEvent", b =>
                {
                    b.Navigation("AttendanceRecords");

                    b.Navigation("Roster");
                });
#pragma warning restore 612, 618
        }
    }
}
